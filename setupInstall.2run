sudo su
GREEN='\033[0;32m'
RED='\041[0;32m'
ENDCOLOR="\e[0m"

# check if program is Installed and code to apt command installer & updates
apt-get update
apt install tar


#vim
if dpkg -l vim > /dev/null 2>&1; then
	echo -e "${GREEN}vim is installed"
else
	apt install vim
fi


#curl
type -p curl >/dev/null || apt install curl -y
echo -e "${GREEN}curl is installed"


#vs code
if dpkg -l code > /dev/null 2>&1; then
	echo -e "${GREEN}Microsoft Visual Studio Code is installed"
else
	apt install code
fi


#firefox
if dpkg -l firefox > /dev/null 2>&1; then
	echo -e "${GREEN}Mozilla Firefox is installed"
else
	apt install firefox
fi


#google chrome
if dpkg -l ./google-chrome-stable_current_amd64.deb > /dev/null 2>&1; then
	echo -e "${GREEN}Google Chrome is installed"
else
	wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
	apt install ./google-chrome-stable_current_amd64.deb
fi


#git
if dpkg -l git > /dev/null 2>&1; then
	echo -e "${GREEN}Git is installed"
else
	apt-get install git-all
fi


#openVPN client
if dpkg -l openvpn > /dev/null 2>&1; then
	echo -e "${GREEN}OpenVPN Client is installed"
else
	apt-get install openvpn unzip	
fi


#openSSH
if dpkg -l openssh-server > /dev/null 2>&1; then
	echo -e "${GREEN}openSSH is installed"
else
	apt install openssh-server
fi


#ansible
if dpkg -l ansible > /dev/null 2>&1; then
	echo -e "${GREEN}ansible is installed"
else
	apt-add-repository ppa:ansible/ansible
	apt update
	apt install ansible
	touch /etc/ansible/hosts
	echo "the hosts file for ansible is in /etc/ansible/hosts" 
fi


#terraform
if dpkg -l  > /dev/null 2>&1; then
	echo -e "${GREEN}terraform is installed"
else
	apt update
	apt install  software-properties-common gnupg2 curl
	curl https://apt.releases.hashicorp.com/gpg | gpg --dearmor > hashicorp.gpg
	install -o root -g root -m 644 hashicorp.gpg /etc/apt/trusted.gpg.d/
	apt-add-repository "deb [arch=$(dpkg --print-architecture)] https://apt.releases.hashicorp.com focal main"
fi


#kubeCTL
if dpkg -l kubectl > /dev/null 2>&1; then
	echo -e "${GREEN}kubeCTL is installed"
else
	curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
	curl -LO "https://dl.k8s.io/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl.sha256"
	if echo "$(cat kubectl.sha256)  kubectl" | sha256sum --check
	if $? == kubectl:OK; then
		install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
	fi
	kubectl version --client
fi


#docker
if dpkg -l docker > /dev/null 2>&1; then
	echo -e "${GREEN} is installed${ENDCOLOR}"
else
	apt-get install docker-ce docker-ce-cli containerd.io docker-compose-plugin
	if docker run hello-world > /dev/null 2>&1; then
	else echo -e "${RED}docker did not successfully install${ENDCOLOR}"
	fi
	
fi


#python3
if dpkg -l python3 > /dev/null 2>&1; then
	echo -e "${GREEN}python3 is installed"
else
	apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev wget
	cd /tmp
	apt install build-essential zlib1g-dev libncurses5-dev libgdbm-dev libnss3-dev libssl-dev libreadline-dev libffi-dev wget
	tar -xf Python-3.8.3.tgz
	cd python-3.8.3
	./configure --enable-optimizations
	make altinstall
	
fi
python3 --version


#snap
if dpkg -l snapd > /dev/null 2>&1; then
	echo -e "${GREEN}snap is installed"
else
	apt install snapd
	snap install hello-world
	if hello-world "Hello World!" > /dev/null 2>&1; then
		echo -e "${GREEN}snap is installed"
	else echo -e "${RED}snap is not installed correctly"
	fi
fi


#flatPak
if dpkg -l flatpak > /dev/null 2>&1; then
	echo -e "${GREEN}flatPak is installed"
else
	apt install flatpak
fi





exit
